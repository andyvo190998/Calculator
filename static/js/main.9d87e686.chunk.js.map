{"version":3,"sources":["App.jsx","index.js"],"names":["App","useState","calc","setCalc","result","setResult","ops","updateCalc","value","console","log","includes","slice","eval","toString","createDigits","digit","i","push","onClick","handleCalc","alert","className","style","paddingBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uqBAEMA,IAAM,SAANA,MACJ,cAAwBC,oDAAS,IAAjC,sKAAOC,KAAP,cAAaC,QAAb,cACA,WAA4BF,oDAAS,IAArC,uKAAOG,OAAP,cAAeC,UAAf,cAEMC,IAAM,CAAC,IAAK,IAAK,IAAK,KAEtBC,WAAa,SAAbA,WAAcC,OAClBC,QAAQC,IAAIF,OAEVF,IAAIK,SAASH,QAAUF,IAAIK,SAAST,KAAKU,OAAO,MAIlDT,QAAQD,KAAOM,OACVF,IAAIK,SAASH,QAChBH,UAAUQ,KAAKX,KAAOM,OAAOM,cAG3BC,aAAe,WAGnB,IADA,IAAMC,EAAQ,GAFW,WAGhBC,GACPD,EAAME,KACJ,qEAAQC,QAAS,kBAAMZ,WAAWU,EAAEH,aAApC,SAA0DG,GAAJA,KAFjDA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAKT,OAAOD,GAEHI,WAAa,SAAbA,aACAd,IAAIK,SAAST,KAAKU,OAAO,IAC3BS,MAAM,gEACY,KAATnB,MAA0B,KAAXE,OACxBiB,MAAM,0CAENlB,QAAQU,KAAKX,MAAMY,YACnBT,UAAU,MAGd,OACE,mEAAKiB,UAAU,MAAf,UACI,iEAAIC,MAAO,CAACC,cAAe,QAA3B,gCACF,mEAAKF,UAAU,cAAf,UACE,mEAAKA,UAAU,UAAf,UACGlB,OAAS,kFAAQA,OAAR,OAA0B,GACnCF,MAAQ,OAEX,mEAAKoB,UAAU,YAAf,UACE,qEAAQH,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAAS,WAAOhB,QAAQ,IAAKE,UAAU,KAA/C,oBAEF,mEAAKiB,UAAU,SAAf,UACGP,eACD,qEAAQI,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAAS,kBAAMZ,WAAW,MAAlC,eACA,qEAAQY,QAASC,WAAjB,qBAGJ,oEACA,kEAAKE,UAAU,aAAf,SACE,mHAMOtB,2B,+BCtEf,iEAKAyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9d87e686.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  const [calc, setCalc] = useState('');\n  const [result, setResult] = useState('');\n\n  const ops = ['/', '*', '+', '-'];\n\n  const updateCalc = (value) => {\n    console.log(value)\n    if (\n      ops.includes(value) && ops.includes(calc.slice(-1))\n    ) {\n      return\n    }\n    setCalc(calc + value);\n    if (!ops.includes(value)) {\n      setResult(eval(calc + value).toString());\n    }\n  }\n  const createDigits = () => {\n\n    const digit = [];\n    for (let i = 1; i < 10; i++) {\n      digit.push(\n        <button onClick={() => updateCalc(i.toString())} key={i}>{i}</button>\n      )\n    }\n    return digit;\n  };\n  const handleCalc = () => {\n    if (ops.includes(calc.slice(-1))){\n      alert('You should choose the final number, instead of a operator!!!')\n    } else if (calc === '' && result === '') {\n      alert('You should choose your calculation!!!')\n    } else {\n      setCalc(eval(calc).toString())\n      setResult('')\n    }\n  }\n  return (\n    <div className=\"App\">\n        <h2 style={{paddingBottom: '20px'}}>REACTJS CALCULATOR</h2>\n      <div className=\"calculator1\">\n        <div className=\"display\">\n          {result ? <span>({result})</span> : ''}\n          {calc || \"0\"}\n        </div>\n        <div className=\"operators\">\n          <button onClick={() => updateCalc('/')}>/</button>\n          <button onClick={() => updateCalc('*')}>*</button>\n          <button onClick={() => updateCalc('+')}>+</button>\n          <button onClick={() => updateCalc('-')}>-</button>\n          <button onClick={() => {setCalc(''); setResult('')}}>DEL</button>\n        </div>\n        <div className=\"digits\">\n          {createDigits()}\n          <button onClick={() => updateCalc('0')}>0</button>\n          <button onClick={() => updateCalc('.')}>.</button>\n          <button onClick={handleCalc}>=</button>\n        </div>\n      </div>\n      <br />\n      <div className=\"break-line\">\n        <p>This is my calculator version 1</p>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}